// Place your key bindings in this file to override the defaults
[
  // CTRL
  {
    "key": "ctrl+j",
    "command": "workbench.action.previousEditor"
  },
  {
    "key": "ctrl+k",
    "command": "workbench.action.nextEditor"
  },
  {
    "key": "alt+1",
    "command": "-workbench.action.openEditorAtIndex1"
  },
  {
    "key": "ctrl+s",
    "command": "mysql.database.add"
  },
  // ALT
  {
    "key": "alt+e",
    "command": "workbench.action.closeActiveEditor"
  },
  {
    "key": "alt+p",
    "command": "explorer.newFolder"
  },
  {
    "key": "alt+f",
    "command": "explorer.newFile"
  },
  {
    "key": "alt+d",
    "command": "deleteFile",
    "when": "filesExplorerFocus"
  },
  {
    "key": "alt+[",
    "command": "workbench.action.closeOtherEditors"
  },
  {
    "key": "ctrl+alt+[",
    "command": "workbench.action.closeAllGroups"
  },
  {
    "key": "alt+a",
    "command": "mysql.connection.add"
  },
  {
    "key": "alt+j",
    "command": "selectNextSuggestion",
    "when": "suggestWidgetVisible"
  },
  {
    "key": "alt+k",
    "command": "selectPrevSuggestion",
    "when": "suggestWidgetVisible"
  },
  // Explorer and Editor
  {
    "key": "alt+1",
    "command": "workbench.files.action.focusFilesExplorer"
  },
  {
    "key": "alt+1",
    "command": "workbench.action.focusActiveEditorGroup",
    "when": "filesExplorerFocus"
  },
  {
    "key": "ctrl+alt+1",
    "command": "workbench.action.focusActiveEditorGroup"
  },
  // Terminal and Editor
  {
    "key": "alt+0",
    "command": "workbench.action.focusActiveEditorGroup",
    "when": "terminalFocus"
  },
  {
    "key": "alt+0",
    "command": "workbench.action.terminal.focus",
    "when": "!terminalFocus"
  },
  //
  {
    "key": "alt+2",
    "command": "workbench.view.extension.github-cweijan-mysql"
  },
  {
    "key": "alt+3",
    "command": "continue.continueGUIView.focus"
  },
  {
    "key": "alt+q",
    "command": "workbench.action.closeSidebar"
  },
  {
    "key": "ctrl+j",
    "command": "workbench.action.quickOpenNavigateNext",
    "when": "inQuickOpen"
  },
  {
    "key": "ctrl+k",
    "command": "workbench.action.quickOpenNavigatePrevious",
    "when": "inQuickOpen"
  },
  // CTRL + ALT
  {
    "key": "ctrl+alt+s",
    "command": "workbench.action.openSettingsJson"
  },
  {
    "key": "ctrl+alt+j",
    "command": "workbench.action.openGlobalKeybindingsFile"
  },
  {
    "key": "ctrl+alt+k",
    "command": "workbench.action.openGlobalKeybindings"
  },
  {
    "key": "ctrl+alt+0",
    "command": "workbench.action.terminal.toggleTerminal"
  },
  {
    "key": "ctrl+alt+o",
    "command": "workbench.action.files.openFolder"
  },
  // Space
  {
    "key": "shift+c",
    "commands": "rest-client.copy-response-body"
  },
  {
    "key": "alt+3",
    "command": "-workbench.action.openEditorAtIndex3"
  },
  {
    "key": "alt+0",
    "command": "-workbench.action.lastEditorInGroup"
  },
  {
    "key": "ctrl+alt+z",
    "command": "git.revertChange"
  },
  {
    "key": "shift+alt+c",
    "command": "angular.goToComponentWithTemplateFile"
  },
  {
    "key": "shift+alt+t",
    "command": "angular.goToTemplateForComponent"
  },
  {
    "key": "ctrl+p",
    "command": "-extension.vim_ctrl+p",
    "when": "editorTextFocus && vim.active && vim.use<C-p> && !inDebugRepl || vim.active && vim.use<C-p> && !inDebugRepl && vim.mode == 'CommandlineInProgress' || vim.active && vim.use<C-p> && !inDebugRepl && vim.mode == 'SearchInProgressMode'"
  },
  {
    "key": "ctrl+shift+a",
    "command": "-notification.acceptPrimaryAction",
    "when": "notificationFocus || notificationToastsVisible"
  },
  {
    "key": "ctrl+shift+/",
    "command": "editor.action.blockComment",
    "when": "editorTextFocus && !editorReadonly"
  },
  {
    "key": "ctrl+shift+a",
    "command": "-editor.action.blockComment",
    "when": "editorTextFocus && !editorReadonly"
  },
  {
    "key": "ctrl+shift+j",
    "command": "workbench.action.debug.stepOver",
    "when": "debugState == 'stopped'"
  },
  {
    "key": "f10",
    "command": "-workbench.action.debug.stepOver",
    "when": "debugState == 'stopped'"
  },
  {
    "key": "ctrl+shift+k",
    "command": "workbench.action.debug.continue",
    "when": "debugState == 'stopped'"
  },
  {
    "key": "f5",
    "command": "-workbench.action.debug.continue",
    "when": "debugState == 'stopped'"
  },
  {
    "key": "shift+alt+d",
    "command": "workbench.action.debug.start",
    "when": "debuggersAvailable && debugState == 'inactive'"
  },
  {
    "key": "f5",
    "command": "-workbench.action.debug.start",
    "when": "debuggersAvailable && debugState == 'inactive'"
  },
  {
    "key": "ctrl+shift+e",
    "command": "-workbench.view.explorer",
    "when": "viewContainer.workbench.view.explorer.enabled"
  },
  {
    "key": "ctrl+shift+e",
    "command": "editor.debug.action.selectionToRepl"
  },
  {
    "key": "ctrl+shift+l",
    "command": "workbench.action.debug.stepInto",
    "when": "debugState != 'inactive'"
  },
  {
    "key": "f11",
    "command": "-workbench.action.debug.stepInto",
    "when": "debugState != 'inactive'"
  },
  {
    "key": "ctrl+shift+b",
    "command": "debug.enableOrDisableBreakpoint"
  },
  {
    "key": "shift+alt+h",
    "command": "-references-view.showCallHierarchy",
    "when": "editorHasCallHierarchyProvider"
  },
  {
    "key": "shift+alt+h",
    "command": "-gitlens.showQuickRepoHistory",
    "when": "!gitlens:disabled && config.gitlens.keymap == 'alternate'"
  },
  {
    "key": "shift+alt+h",
    "command": "-editor.showCallHierarchy",
    "when": "editorHasCallHierarchyProvider && editorTextFocus && !inReferenceSearchEditor"
  },
  {
    "key": "shift+alt+h",
    "command": "-editor.showIncomingCalls",
    "when": "callHierarchyVisible && callHierarchyDirection == 'outgoingCalls'"
  },
  {
    "key": "shift+alt+h",
    "command": "-editor.showOutgoingCalls",
    "when": "callHierarchyVisible && callHierarchyDirection == 'incomingCalls'"
  },
  {
    "key": "shift+alt+h",
    "command": "-editor.showSubtypes",
    "when": "typeHierarchyVisible && typeHierarchyDirection == 'supertypes'"
  },
  {
    "key": "shift+alt+h",
    "command": "-editor.showSupertypes",
    "when": "typeHierarchyVisible && typeHierarchyDirection == 'subtypes'"
  },
  {
    "key": "ctrl+alt+-",
    "command": "-workbench.action.navigateBack",
    "when": "canNavigateBack"
  },
  {
    "key": "shift+alt+l",
    "command": "workbench.action.navigateForward",
    "when": "canNavigateForward"
  },
  {
    "key": "ctrl+shift+-",
    "command": "-workbench.action.navigateForward",
    "when": "canNavigateForward"
  },
  /// MOVE LINES
  {
    "key": "shift+alt+j",
    "command": "editor.action.moveLinesDownAction",
    "when": "editorTextFocus"
  },
  {
    "key": "shift+alt+k",
    "command": "editor.action.moveLinesUpAction",
    "when": "editorTextFocus"
  },
  {
    "key": "ctrl+alt+h",
    "command": "extension.markdown-pdf.html"
  },
  {
    "key": "ctrl+alt+p",
    "command": "extension.markdown-pdf.pdf"
  },
  {
    "key": "ctrl+shift+v",
    "command": "-markdown.showPreview",
    "when": "!notebookEditorFocused && editorLangId == 'markdown'"
  },
  {
    "key": "ctrl+alt+m",
    "command": "markdown.showPreviewToSide",
    "when": "!notebookEditorFocused && editorLangId == 'markdown'"
  },
  {
    "key": "ctrl+k v",
    "command": "-markdown.showPreviewToSide",
    "when": "!notebookEditorFocused && editorLangId == 'markdown'"
  },
  {
    "key": "ctrl+s",
    "command": "workbench.action.files.save",
  },
  {
    "key": "ctrl+alt+n",
    "command": "emoji.insertMarkdown"
  },
  {
    "key": "ctrl+shift+s",
    "command": "-workbench.action.files.saveAs"
  },
  {
    "key": "ctrl+shift+s",
    "command": "-workbench.action.files.saveLocalFile",
    "when": "remoteFileDialogVisible"
  },
  {
    "key": "ctrl+d",
    "command": "-editor.action.addSelectionToNextFindMatch",
    "when": "editorFocus"
  },
  {
    "key": "alt+m",
    "command": "markdown-kanban.openKanban"
  },
  {
    "key": "alt+l",
    "command": "-toggleSearchEditorContextLines",
    "when": "inSearchEditor"
  },
  {
    "key": "alt+l",
    "command": "-toggleFindInSelection",
    "when": "editorFocus"
  },
  {
    "key": "alt+l alt+c",
    "command": "-extension.liveServer.goOffline",
    "when": "editorTextFocus"
  },
  {
    "key": "alt+l alt+o",
    "command": "-extension.liveServer.goOnline",
    "when": "editorTextFocus"
  },
  {
    "key": "alt+h",
    "command": "-gitlens.showQuickFileHistory",
    "when": "!gitlens:disabled && config.gitlens.keymap == 'alternate'"
  },
  {
    "key": "alt+h",
    "command": "-testing.toggleTestingPeekHistory",
    "when": "testing.isPeekVisible"
  },
  {
    "key": "alt+h",
    "command": "-editor.action.accessibilityHelpOpenHelpLink",
    "when": "accessibilityHelpIsShown"
  },
  {
    "key": "alt+k",
    "command": "-keybindings.editor.recordSearchKeys",
    "when": "inKeybindings && inKeybindingsSearch"
  },
  {
    "key": "alt+k",
    "command": "-editor.action.accessibilityHelpConfigureKeybindings",
    "when": "accessibilityHelpIsShown && accessibleViewHasUnassignedKeybindings"
  },
  {
    "key": "alt+l",
    "command": "workbench.action.splitEditorToRightGroup"
  },
  {
    "key": "ctrl+enter",
    "command": "pgsql.runQuery",
    "when": "editorTextFocus && editorLangId == 'sql'"
  },
  {
    "key": "shift+enter",
    "command": "-pgsql.runQuery",
    "when": "editorTextFocus && editorLangId == 'sql'"
  },
  {
    "key": "alt+2",
    "command": "pg-objectExplorer.focus"
  },
  {
    "key": "ctrl+shift+d",
    "command": "pgsql.changeDatabase"
  },
  {
    "key": "ctrl+shift+d",
    "command": "-pgsql.disconnect",
    "when": "editorTextFocus && editorLangId == 'sql'"
  },
  {
    "key": "ctrl+shift+q",
    "command": "pgsql.newQuery"
  },
  {
    "key": "alt+shift+r",
    "command": "extension.liveServer.goOnline"
  },
  {
    "key": "alt+shift+s",
    "command": "extension.liveServer.goOffline"
  },
  {
    "key": "ctrl+k ctrl+c",
    "command": "-editor.action.addCommentLine",
    "when": "editorTextFocus && !editorReadonly"
  },
  {
    "key": "ctrl+/",
    "command": "editor.action.commentLine",
    "when": "editorTextFocus && !editorReadonly"
  },
  {
    "key": "ctrl+/",
    "command": "-editor.action.commentLine",
    "when": "editorTextFocus && !editorReadonly"
  },
  {
    "key": "alt+1",
    "command": "workbench.view.explorer"
  },
  {
    "key": "alt+q",
    "command": "workbench.action.toggleAuxiliaryBar"
  }
]